@using Meme_Platform.Extensions
@using Meme_Platform.Core.Models

@model HomeViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col-lg-8">
        <div id="posts-container">
            @await Component.InvokeAsync("PostsPage", new { page = 1 })
        </div>
        <div class="progress-spinner sk-folding-cube">
            <div class="sk-cube1 sk-cube"></div>
            <div class="sk-cube2 sk-cube"></div>
            <div class="sk-cube4 sk-cube"></div>
            <div class="sk-cube3 sk-cube"></div>
        </div>
    </div>
    <div class="col-lg-4">
        <div>
            <a href="@Url.Action("Create", "Posts")"
               class="btn btn-primary btn-block">
                <span class="glyphicon glyphicon-upload"></span>
                Upload
            </a>
        </div>
        <br />
        @if (Model.PostOfTheDay != null)
        {
            <div class="panel panel-default">
                <div class="panel-heading">Post of the day:</div>
                <div class="panel-body">
                    <a href="/Posts/View/@(Model.PostOfTheDay.Id)">
                        @string.Format(
                            "{0} with {1} points!",
                            Model.PostOfTheDay.Title,
                            Model.PostOfTheDay.Votes.Sum(v => (int)v.Type))
                    </a>
                    <div class="post-preview">
                        <a href="/Posts/View/@(Model.PostOfTheDay.Id)">
                            <img src="@(Model.PostOfTheDay.Content.GetImageUrl())" />
                        </a>
                    </div>
                </div>
            </div>
        }
        <div class="panel panel-default">
            <div class="panel-heading">Top contributors:</div>
            <div class="panel-body">
                <ul class="list-group">
                    @foreach (var contributor in Model.TopContributors)
                    {
                        <li class="list-group-item">
                            <img width="30" src="@Url.Content(contributor.ProfilePictureUrl)" />
                            @contributor.Nickname
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div>
            <div class="panel panel-default">
                <div class="panel-heading">Top posts:</div>
                <div class="panel-body">
                    <ul class="list-group">
                        @foreach (var post in Model.TopPosts)
                        {
                            <li class="list-group-item">
                                <a href="/Posts/View/@(post.Id)">
                                    @string.Format(
                                        "{0} with {1} points!",
                                        post.Title,
                                        post.Votes.Sum(v => (int)v.Type))
                                </a>
                                <div class="post-preview">
                                    <a href="/Posts/View/@(post.Id)">
                                        @if (post.Content.ContentType == ContentType.Image)
                                        {
                                            <img src="@(post.Content.GetImageUrl())" />
                                        }
                                        else
                                        {
                                            @*<img src="@(post.YouTubeLink.GetYoutubeThumbnail())" />*@
                                        }
                                    </a>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script src="~/js/voting-functions.js"></script>
    <script src="~/js/posts-loader.js"></script>

    <script>
        $(function () {
            $(".nsfw-overlay").on("click", function () {
                $(this).slideUp();
            });

            $(".toggle-nsfw").on("click", function () {
                var postId = $(this).attr('data-id');
                var requestData = {
                    postId: postId
                };

                if (postId) {
                    $.post('@Url.Action("ToggleNSFW", "Posts")', requestData, function (data) {
                        if (data.isSuccess) {
                            if (data.response) {
                                toastr["success"]("Post is now NSFW.", "Success");
                            } else {
                                toastr["success"]("Post is no longer NSFW.", "Success");
                            }
                        } else {
                            toastr["error"]("Server error!", "WTF");
                        }
                    }).error(function () {
                        toastr["error"]("Server error!", "WTF");
                    });
                } else {
                    toastr["error"]("Can't locate post Id!", "WTF");
                }
            });
        });
    </script>
}